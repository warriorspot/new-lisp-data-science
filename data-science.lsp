(define (load-matrix filename header)
    (let (X (list) line (list) fileno (open filename "r")) 
        (if (= header 1) (read-line fileno))
        (while (setq line (read-line fileno)) 
            (if (> (length line) 0)
                (extend X (list (map float (parse line ","))))))
        (close fileno)
        X))

(define (get-row x i)
    (x i))

(define (get-column x i)
    (let (temp (list)) 
        (dolist (each x) 
            (extend temp (list (each i))))
        temp))

(define (row-sums x) 
    (let (out (list)) 
        (dolist (each x) 
            (extend out (list (apply + each)))) 
        out))

(define (col-sums x)
    (let (temp (list) out (list)) 
        (for (i 0 (- (length (x 0)) 1))
            (dolist (each x) 
                (extend temp (list (each i))))
            (extend out (list (apply + temp))) 
            (setq temp '()))
        out))
